"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[783],{3905:function(e,t,r){r.d(t,{Zo:function(){return s},kt:function(){return d}});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var u=n.createContext({}),c=function(e){var t=n.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},s=function(e){var t=c(e.components);return n.createElement(u.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,u=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),m=c(r),d=o,f=m["".concat(u,".").concat(d)]||m[d]||p[d]||a;return r?n.createElement(f,l(l({ref:t},s),{},{components:r})):n.createElement(f,l({ref:t},s))}));function d(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,l=new Array(a);l[0]=m;var i={};for(var u in t)hasOwnProperty.call(t,u)&&(i[u]=t[u]);i.originalType=e,i.mdxType="string"==typeof e?e:o,l[1]=i;for(var c=2;c<a;c++)l[c]=r[c];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},8215:function(e,t,r){var n=r(7294);t.Z=function(e){var t=e.children,r=e.hidden,o=e.className;return n.createElement("div",{role:"tabpanel",hidden:r,className:o},t)}},6396:function(e,t,r){r.d(t,{Z:function(){return m}});var n=r(7462),o=r(7294),a=r(2389),l=r(9443);var i=function(){var e=(0,o.useContext)(l.Z);if(null==e)throw new Error('"useUserPreferencesContext" is used outside of "Layout" component.');return e},u=r(3616),c=r(6010),s="tabItem_vU9c";function p(e){var t,r,a,l=e.lazy,p=e.block,m=e.defaultValue,d=e.values,f=e.groupId,y=e.className,v=o.Children.map(e.children,(function(e){if((0,o.isValidElement)(e)&&void 0!==e.props.value)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),b=null!=d?d:v.map((function(e){var t=e.props;return{value:t.value,label:t.label,attributes:t.attributes}})),h=(0,u.lx)(b,(function(e,t){return e.value===t.value}));if(h.length>0)throw new Error('Docusaurus error: Duplicate values "'+h.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var g=null===m?m:null!=(t=null!=m?m:null==(r=v.find((function(e){return e.props.default})))?void 0:r.props.value)?t:null==(a=v[0])?void 0:a.props.value;if(null!==g&&!b.some((function(e){return e.value===g})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+g+'" but none of its children has the corresponding value. Available values are: '+b.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var k=i(),w=k.tabGroupChoices,T=k.setTabGroupChoices,j=(0,o.useState)(g),O=j[0],x=j[1],E=[],N=(0,u.o5)().blockElementScrollPositionUntilNextRender;if(null!=f){var P=w[f];null!=P&&P!==O&&b.some((function(e){return e.value===P}))&&x(P)}var C=function(e){var t=e.currentTarget,r=E.indexOf(t),n=b[r].value;n!==O&&(N(t),x(n),null!=f&&T(f,n))},S=function(e){var t,r=null;switch(e.key){case"ArrowRight":var n=E.indexOf(e.currentTarget)+1;r=E[n]||E[0];break;case"ArrowLeft":var o=E.indexOf(e.currentTarget)-1;r=E[o]||E[E.length-1]}null==(t=r)||t.focus()};return o.createElement("div",{className:"tabs-container"},o.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,c.Z)("tabs",{"tabs--block":p},y)},b.map((function(e){var t=e.value,r=e.label,a=e.attributes;return o.createElement("li",(0,n.Z)({role:"tab",tabIndex:O===t?0:-1,"aria-selected":O===t,key:t,ref:function(e){return E.push(e)},onKeyDown:S,onFocus:C,onClick:C},a,{className:(0,c.Z)("tabs__item",s,null==a?void 0:a.className,{"tabs__item--active":O===t})}),null!=r?r:t)}))),l?(0,o.cloneElement)(v.filter((function(e){return e.props.value===O}))[0],{className:"margin-vert--md"}):o.createElement("div",{className:"margin-vert--md"},v.map((function(e,t){return(0,o.cloneElement)(e,{key:t,hidden:e.props.value!==O})}))))}function m(e){var t=(0,a.Z)();return o.createElement(p,(0,n.Z)({key:String(t)},e))}},2093:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return c},contentTitle:function(){return s},metadata:function(){return p},toc:function(){return m},default:function(){return f}});var n=r(7462),o=r(3366),a=(r(7294),r(3905)),l=r(6396),i=r(8215),u=["components"],c={sidebar_position:3},s="Register your model into Simply",p={unversionedId:"models/register-models",id:"models/register-models",title:"Register your model into Simply",description:"After creating all of your models you have to register the models into Simply.",source:"@site/docs/models/register-models.mdx",sourceDirName:"models",slug:"/models/register-models",permalink:"/simply-documentation/models/register-models",editUrl:"https://github.com/Amorfx/simply-documentation/tree/main/documentation/docs/models/register-models.mdx",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Create your custom models",permalink:"/simply-documentation/models/create-model"},next:{title:"Repositories",permalink:"/simply-documentation/models/repository"}},m=[{value:"Why ?",id:"why-",children:[],level:2},{value:"How ?",id:"how-",children:[],level:2}],d={toc:m};function f(e){var t=e.components,r=(0,o.Z)(e,u);return(0,a.kt)("wrapper",(0,n.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"register-your-model-into-simply"},"Register your model into Simply"),(0,a.kt)("p",null,"After creating all of your models you have to register the models into Simply."),(0,a.kt)("h2",{id:"why-"},"Why ?"),(0,a.kt)("p",null,"To inject automatically the good model with ",(0,a.kt)("inlineCode",{parentName:"p"},"ModelFactory"),". The ",(0,a.kt)("inlineCode",{parentName:"p"},"ModelFactory")," allows you to return the correct model according to the injecting object.\nLike when you use hook you don't know which post type is the current object queried."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-php"},"<?php\n\nglobal $post;\n\n// $post->post_type is project\n$project = ModelFactory::create($post);\n// $project will be an instance of Project model after registered into Simply\n")),(0,a.kt)("h2",{id:"how-"},"How ?"),(0,a.kt)("p",null,"With the good filter provides by Simply :"),(0,a.kt)(l.Z,{mdxType:"Tabs"},(0,a.kt)(i.Z,{value:"post-type",label:"Post type",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-php"},"add_filter('simply/model/post_type_mapping', function(array $mapping) {\n    $mapping[] = Project::class;\n    return $mapping;\n});\n"))),(0,a.kt)(i.Z,{value:"taxonomy",label:"Taxonomy",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-php"},"// Add model for project tag\nadd_filter('simply/model/term_mapping', function(array $mapping) {\n    $mapping[] = ProjectTag::class;\n    return $mapping;\n});\n")))),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"$mapping")," array has basic object for post and category and tag. You can remove or replace it."))}f.isMDXComponent=!0}}]);