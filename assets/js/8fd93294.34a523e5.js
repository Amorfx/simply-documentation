"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[803],{9998:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>a});var t=i(5893),r=i(1151);const o={sidebar_position:3},s="Create your first plugin",l={id:"getting-started/create-plugin",title:"Create your first plugin",description:"A plugin created with Simply is only a WordPress plugin with some filters.",source:"@site/docs/getting-started/create-plugin.md",sourceDirName:"getting-started",slug:"/getting-started/create-plugin",permalink:"/simply-documentation/getting-started/create-plugin",draft:!1,unlisted:!1,editUrl:"https://github.com/Amorfx/simply-documentation/tree/main/documentation/docs/getting-started/create-plugin.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Configure your WordPress",permalink:"/simply-documentation/getting-started/config-wordpress"},next:{title:"Create your first theme",permalink:"/simply-documentation/getting-started/create-theme"}},c={},a=[{value:"Plugin Tree",id:"plugin-tree",level:2},{value:"Plugin entrypoint configuration",id:"plugin-entrypoint-configuration",level:2},{value:"Create plugin with the CLI",id:"create-plugin-with-the-cli",level:2}];function d(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"create-your-first-plugin",children:"Create your first plugin"}),"\n",(0,t.jsx)(n.admonition,{type:"note",children:(0,t.jsx)(n.p,{children:"A plugin created with Simply is only a WordPress plugin with some filters."})}),"\n",(0,t.jsx)(n.p,{children:"You have two possibilities to create a plugin with Simply :"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Register directly all the plugin to Simply and autoconfigure all files to services, hook, controller etc."}),"\n",(0,t.jsx)(n.li,{children:"Register only specifics files to simply with WordPress filters"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"plugin-tree",children:"Plugin Tree"}),"\n",(0,t.jsx)(n.p,{children:"With Simply you only must have a config directory and a src directory if you want to use the Symfony dependency injection."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:".\n\u251c\u2500\u2500 your-plugin\n\u2502   \u251c\u2500\u2500 config\n\u2502   \u251c\u2500\u2500 src\n\u2502   \u2514\u2500\u2500 your-plugin.php\n\u2514\u2500\u2500\n"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"config"}),": add your yaml files into this folder,"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"src"}),": add your other files for your plugin"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"your-plugin.php"}),": add some configuration code."]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"plugin-entrypoint-configuration",children:"Plugin entrypoint configuration"}),"\n",(0,t.jsxs)(n.p,{children:["Simply look into some directories to load configuration file for the Symfony dependency injection.\nIn ",(0,t.jsx)(n.code,{children:"your-plugin.php"})," you have to add some filters to add your config directory into the lists of configuration files."]}),"\n",(0,t.jsx)(n.p,{children:"But to automatize all the things (add class to service container, configure hooks) add only one line :"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-php",metastring:"title='plugins/your-plugin/your-plugin.php'",children:"<?php\n/*\nPlugin Name: My custom plugin\nDescription: Description of my plugin\nAuthor: John Doe\nVersion: 1.0\n*/\n\n// require your autoload here\n\nSimply::registerPlugin(__DIR__, 'MyCustomPlugin');\n"})}),"\n",(0,t.jsx)(n.p,{children:"It informs the framework :"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"that all classes into the namespace are services by default"}),"\n",(0,t.jsx)(n.li,{children:"autoconfigure hooks classes, controllers and other WordPress features that Simply can understand"}),"\n",(0,t.jsx)(n.li,{children:"add config directory to the list of directories for the service container"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"create-plugin-with-the-cli",children:"Create plugin with the CLI"}),"\n",(0,t.jsx)(n.p,{children:"In your project directory"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"php bin/console simply:make:plugin\n"})}),"\n",(0,t.jsx)(n.p,{children:"Then respond to all the questions to finalize plugin creation."})]})}function u(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},1151:(e,n,i)=>{i.d(n,{Z:()=>l,a:()=>s});var t=i(7294);const r={},o=t.createContext(r);function s(e){const n=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);